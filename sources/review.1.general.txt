//REVIEW_REC: - just FYI, рекомендации
//REVIEW: - мои коменты по коду 

Driver:
1. minifilter\_tmp, minifilter\sym, minifilter\sys это линее, хранить логи билда вообще не нужно, а бинари можно собрать с сорцов всегда
Ответ к 1. Можно без всего этого, но мне не хочется каждый раз делать новый папки и писать новые батники если перейду на другой комп – так удобно.
2. я бы все же использовал уже готовое API для деревьев вместо minifilter\tree.h, ну или шаблоны С++
Ответ к 2. Можете пж скинуть ссылочку, где описано API для ассоциативных массивов или подобных штук. (пишу на C. не знаю как код на C++ собирать, чтоб получить драйвер).
3. желательно исправить все варнинги, это потенциальные баги
Ответ к 3. Хорошо.
4. можно как то goto поубирать?
Ответ к 4. Можно, но нам лектор по C++ сказал, что использование меток для ошибок в С – это хорошо. Скажите пж почему их лучше убрать.

_________________________________________________________
номера строк по твоему коммиту.

sources/minifilter/src/hide_files_filter.c
	Строка 336:
	//REVIEW: FltSetInstanceContext это как то нужно откатить при ошибке тут?
	в 337 строке FltReleaseContext(Context); – это и есть откат (вызовется функция InstanceContextCleanupCallback)

sources/minifilter/src/structures_and_routines.c
	Строка 52:
	не знаю, как оно переведет на ассемблер (будет хуже или лучше ), но мне кажетс, что взятие адреса хуже, чем сложение. Можете сказать, что лучше по скорости.

	Строка 55:
	спасибо, да.

	Строка 79:
	спасибо, да. Нужно убрать ptr--. А функция помещает в cur_name кусочек path (имя между слешами).

	Строка 102:
	как бы я знаю, что нигде не проверяю поле MaximumLength (API для cur_name не использую) и таратить на обнуление поля время процессора плохо. Скажите почему его лучше обнулить.
	
	Строка 109:
	Тоже нужно убрать ptr--. Да, это нормально, так надо.

	Строка 109:
	Тоже нужно убрать ptr--. Да, это нормально, так надо.
	
	Строка 136:
	cur_rule_is_mask не основной результат этой функции, так что мне кажется такой вариант хорошим. 

	Строка 315:
	Посмотрю готовые локи.
	2. Поток прерывается, только если container->read_flag не установлен, а он установлен по умолчанию.
	3. «лок захвачен => прерывается» не понял.
	4. Не понял.
	5. Та нет, вроде все ок.
	Можете чуть подробней разъяснить суть ошибки пожалуйста.
	
	Строка 326:
	в ACTIONS_PRE_WRITING с ASSERT есть объявление переменной status, так что дело не только в ASSERT.

 sources/minifilter/src/structures_and_routines.h
	
	Строка 28:
	Спасибо, да. Поменяю.
	
	Строка 39:
	Использовать это будет CDO (еще не готов CDO). Почему не правильно?
	
	Строка 42 и 44:
	Эти функции определяются в structures_and_routines.c, а используются и в других *.с (будут использоваться в CDO). GetMemory и FreeMemory уже используются в hide_files_filter.c.

 sources/minifilter/src/tree.h
	
	Строка 9 и 22:
	unsigned char balance_ : 2 хотелось бы, чтоб экономило (то, что ширина 2 байта – ну да, это не экономит, но то, что char, а не int, может сэкономить)
	enum – по умолчанию int – если хочется сэкономить, придется приводить типы (не сложно но не хочется).

	Строка 29:
	если tree == NULL, то дерево еще не созданное и тогда нет смысла проверять на пустоту дерева (пусть tree == NULL делает вызывающий).

	Строка 40:
	мало ли что передаст в макрос пользователь, может еще один макрос, а может еще что (это рекомендации к тому, что хотелось бы получить в параметры макроса).

Спасибо за Ревью.
_________________________________________________________

GUI:
1. в MainWindow.cpp есть утечка ресурсов
2. если есть RulesManager(const RulesManager &rulesManager);
   то по хорошему, должен быть и RulesManager& operator=(const RulesManager&);
3. в RulesManager::RulesManager пропущена инициализация _hiddingIsOn
